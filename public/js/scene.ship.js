// Generated by CoffeeScript 1.10.0
(function() {
  namespace("scene.ship", function(exports) {
    var center, ctx, drawShip, drawThrust, state, thrustDistMax;
    state = {};
    ctx = null;
    center = 0;
    thrustDistMax = 30;
    exports.setState = function(gameState) {
      return state = gameState;
    };
    exports.render = function(contex, vx, inputs, fps) {
      ctx = contex;
      center = {
        x: ctx.canvas.width / 2,
        y: ctx.canvas.height / 2
      };
      drawShip(vx, inputs);
      if (inputs.l === 1 || inputs.r === 1) {
        return drawThrust(vx, inputs);
      }
    };
    drawShip = function(vx, input) {
      ctx.fillStyle = "rgba(255,255,255,1)";
      ctx.beginPath();
      if (vx > 0) {
        ctx.moveTo(center.x - 25, center.y - 10);
        ctx.lineTo(center.x + 25, center.y + 10);
        ctx.lineTo(center.x - 25, center.y + 10);
      } else {
        ctx.moveTo(center.x + 25, center.y - 10);
        ctx.lineTo(center.x - 25, center.y + 10);
        ctx.lineTo(center.x + 25, center.y + 10);
      }
      ctx.closePath();
      return ctx.fill();
    };
    return drawThrust = function(vx, input) {
      var thrustAmt;
      thrustAmt = Math.random() * thrustDistMax;
      ctx.fillStyle = "rgba(200,0,0,.8)";
      ctx.beginPath();
      if (input.r) {
        ctx.moveTo(center.x - 25, center.y - 10);
        ctx.lineTo(center.x - 25, center.y + 10);
        ctx.lineTo(center.x - (35 + thrustAmt), center.y);
      } else {
        ctx.moveTo(center.x + 25, center.y - 10);
        ctx.lineTo(center.x + 25, center.y + 10);
        ctx.lineTo(center.x + (35 + thrustAmt), center.y);
      }
      ctx.closePath();
      return ctx.fill();
    };
  });

}).call(this);
